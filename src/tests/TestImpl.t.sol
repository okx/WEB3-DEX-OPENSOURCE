pragma solidity 0.8.20;

import "forge-std/Test.sol";

contract ImplTest is Test {
    function setUp() public {}

    // function test_upgrade_xlayer_20240417() public {
    //     address dexRouter = 0x127a986cE31AA2ea8E1a6a0F0D5b7E5dbaD7b0bE;
    //     address newImpl = 0x16f37072FFcE9A563C59E13759d2fAE47AE52E5a;
    //     vm.createSelectFork("https://rpc.xlayer.tech", 501169 - 1);
    //     vm.store(
    //         dexRouter,
    //         0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc,
    //         bytes32(uint256(uint160(newImpl)))
    //     );
    //     address user = 0x00607Bc08b113D3599E5dF567B8C501d832cefc3;
    //     bytes
    //         memory data = hex"b80c2f090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000dcb18df94df54751a3b50fa91688658be55c12780000000000000000000000001e4a5963abfd975d8c9021ce480b42188849d41d00000000000000000000000000000000000000017a4ae32d4500a94d3570c098000000000000000000000000000000000000000000000000000000000456af2f00000000000000000000000000000000000000000000000000000000661f5494000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000660000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000017a4ae32d4500a94d3570c0980000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000022000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000dcb18df94df54751a3b50fa91688658be55c127800000000000000000000000000000000000000000000000000000000000000010000000000000000000000002706c60251a5e365478874104fa790f5d49a7cc90000000000000000000000000000000000000000000000000000000000000001000000000000000000000000567c19d7973b8e2f6f4b27490b1c4bb13a93e9ff0000000000000000000000000000000000000000000000000000000000000001000000000000000000002710567c19d7973b8e2f6f4b27490b1c4bb13a93e9ff000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000e538905cf8410324e03a5a23c1c177a474d59b2b00000000000000000000000000000000000000000000000000000000000000010000000000000000000000007daf29d2000fd29d5c4b28bd4f1956fe9948d07800000000000000000000000000000000000000000000000000000000000000010000000000000000000000007daf29d2000fd29d5c4b28bd4f1956fe9948d0780000000000000000000000000000000000000000000000000000000000000001800000000000000000002710af02239c392f966798c31bcef767d531a805755c0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000060000000000000000000000000e538905cf8410324e03a5a23c1c177a474d59b2b0000000000000000000000001e4a5963abfd975d8c9021ce480b42188849d41d0000000000000000000000000000000000000000000000000000000000000bb80000000000000000000000000000000000000000000000000000000000000000";
    //     vm.startPrank(user);
    //     (bool s, ) = dexRouter.call(data);
    //     require(s);
    // }

    function test_upgrade_okc_20240418() public {
        address dexRouter = 0xf6Aab105CB9e66e03CAD2c2F3f8558242593385c;
        address newImpl = 0xFA574f8B3152504E391E53FfF6e55E3Ee56e0889;
        vm.createSelectFork(
            "https://oktc-mainnet.public.blastapi.io",
            27141535 - 1
        );
        vm.store(
            dexRouter,
            0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc,
            bytes32(uint256(uint160(newImpl)))
        );
        address user = 0x9712ff0BF90ccCf29f8c1076f5ec7B84727008dc;
        vm.deal(user, 20 ether);
        bytes
            memory data = hex"b80c2f090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000382bb369d343125bfb2117af9c149795c6c65c50000000000000000000000000000000000000000000000000d02ab486cedc00000000000000000000000000000000000000000000000000000004e9827db317da00000000000000000000000000000000000000000000000000000000ff2056ec000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000a20000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000095e14ec7763800000000000000000000000000000000000000000000000000003a4965bf58a400000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001600000000000000000000000008f8526dbfd6e38e3d8307702ca8469bae6c56c1500000000000000000000000000000000000000000000000000000000000000010000000000000000000000005eae840294c757e6fffe462e9c989944386613d40000000000000000000000000000000000000000000000000000000000000001000000000000000000000000f3098211d012ff5380a03d80f150ac6e5753caa80000000000000000000000000000000000000000000000000000000000000001800000000000000000002710f3098211d012ff5380a03d80f150ac6e5753caaa000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001600000000000000000000000008f8526dbfd6e38e3d8307702ca8469bae6c56c1500000000000000000000000000000000000000000000000000000000000000010000000000000000000000005eae840294c757e6fffe462e9c989944386613d40000000000000000000000000000000000000000000000000000000000000001000000000000000000000000aea843a6715d091f7a5644ed4fcca479820bd18a0000000000000000000000000000000000000000000000000000000000000001000000000000000000002710aea843a6715d091f7a5644ed4fcca479820bd18a000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000df54b6c6195ea4d948d03bfd818d365cf175cfc200000000000000000000000000000000000000000000000000000000000000010000000000000000000000005eae840294c757e6fffe462e9c989944386613d40000000000000000000000000000000000000000000000000000000000000001000000000000000000000000562f8cf1e7a5f72e01452c6bceebd4cd3399cb940000000000000000000000000000000000000000000000000000000000000001800000000000000000002710562f8cf1e7a5f72e01452c6bceebd4cd3399cb94000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000dcac52e001f5bd413aa6ea83956438f29098166b00000000000000000000000000000000000000000000000000000000000000010000000000000000000000005eae840294c757e6fffe462e9c989944386613d40000000000000000000000000000000000000000000000000000000000000001000000000000000000000000401b38543dd93a07c2d139b7d1cdb24a3c7df3c40000000000000000000000000000000000000000000000000000000000000001800000000000000000002710401b38543dd93a07c2d139b7d1cdb24a3c7df3c400000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
        vm.startPrank(user);
        (bool s, ) = dexRouter.call{value: 15 ether}(data);
        require(s);
    }

    function test_upgrade_scroll_20240419() public {
        address dexRouter = 0x6b2C0c7be2048Daa9b5527982C29f48062B34D58;
        address newImpl = 0xD58bD6B60d088CB65Df04d3a6D9b0dF30E026a25;
        vm.createSelectFork("https://rpc.ankr.com/scroll", 4933593 - 1);
        vm.store(
            dexRouter,
            0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc,
            bytes32(uint256(uint160(newImpl)))
        );
        vm.warp(1);
        address user = 0xc88369F57867bC37642CdEd7c645FCd85AE8822D;
        vm.deal(user, 20 ether);
        bytes
            memory data = hex"9871efa400000000002e46f004cb12c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002386f26fc100000000000000000000000000000000000000000000000000000000000001b17bc60000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000180000000000000003b74a4606562e87944e4d6ccf9839c662db32e6b19f72cde";
        vm.startPrank(user);
        (bool s, ) = dexRouter.call{value: 0.01 ether}(data);
        require(s);
        user = 0x88cB91a1873127f55589e08628853324428a93a5;
        data = hex"9871efa400000000002e46f741a3090006efdbff2a14a7c8e15944d1f4a48f9f95f663a400000000000000000000000000000000000000000000000000000000023300ea000000000000000000000000000000000000000000000000002ce69d868e17760000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000140000000000000003b6d03406905c59be1a7ea32d1f257e302401ec9a1401c52";
        vm.startPrank(user);
        (s, ) = dexRouter.call(data);
        require(s);
    }
}
